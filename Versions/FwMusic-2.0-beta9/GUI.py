# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\Documents\FwMusic_20109.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import Fwapi
from ttkbootstrap.dialogs import Messagebox


api = Fwapi.API()
if api.get_version()[0:4] != 'v201':
    sys.exit('Error:API Version Valid.')

class Ui_MainWindow(object):
    def __init__(self):
        self.url = ""

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1090, 690)  # 将窗口大小放大至原来的两倍
        MainWindow.setMinimumSize(QtCore.QSize(1090, 690))
        MainWindow.setMaximumSize(QtCore.QSize(1090, 690))
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        MainWindow.setStyleSheet("border-image: url(\'D:/Python Projects/FwMusic2/FwMusic-2.0-beta4_PIC/CityTheme2_use.png\')\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, -20, 422, 162))  # 将 "FwMusic v2.0.0" 标签向右移动并放大
        self.label.setStyleSheet("font: 48pt \"Times New Roman\";\n"  # 减小字体
"color:rgb(58, 153, 255);\n"
"border-image: Transparent")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(390, 65, 182, 32))  # 放大
        self.label_2.setStyleSheet("font: 15pt \"Times New Roman\";\n"  # 减小字体
"color:rgb(102, 88, 255);\n"
"border-image: Transparent")

        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton.setGeometry(QtCore.QRect(840, 120, 202, 82))  # 放大
        self.commandLinkButton.setStyleSheet("font: 16pt \"Times New Roman\";\n"  # 放大字体
"background:rgb(184, 201, 255);\n"
"border-image: Transparent;")
        self.commandLinkButton.clicked.connect(self.download)
        self.commandLinkButton.setObjectName("commandLinkButton")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(20, 120, 782, 62))  # 放大
        self.lineEdit.setStyleSheet("background:rgb(184, 201, 255);\n"
"border-image: Transparent;")
        self.lineEdit.setText("")
        self.lineEdit.setPlaceholderText("Enter the URL of the music you want to download")
        self.lineEdit.returnPressed.connect(self.get_url)
        self.lineEdit.setObjectName("lineEdit")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(920, 540, 162, 62))  # 放大
        self.pushButton.setStyleSheet("font: 16pt \"Times New Roman\";\n"  # 放大字体
"background: rgb(175, 203, 255);\n"
"border-image: Transparent;")
        self.pushButton.clicked.connect(self.settings)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(920, 460, 162, 62))  # 放大
        self.pushButton_2.setStyleSheet("font: 16pt \"Times New Roman\";\n"  # 放大字体
"background: rgb(175, 203, 255);\n"
"border-image: Transparent;")
        self.pushButton_2.clicked.connect(self.about)
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(0, 620, 202, 32))  # 放大
        self.label_3.setStyleSheet("font: 10pt \"Times New Roman\";\n"  # 减小字体
"color:rgb(199, 212, 255);\n"
"border-image: Transparent;")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(0, 640, 302, 32))  # 放大
        self.label_4.setStyleSheet("font: 10pt \"Times New Roman\";\n"  # 减小字体
"color:rgb(199, 212, 255);\n"
"border-image: Transparent;")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(0, 660, 182, 32))  # 放大
        self.label_5.setStyleSheet("font: 10pt \"Times New Roman\";\n"  # 减小字体
"color:rgb(199, 212, 255);\n"
"border-image: Transparent;")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(820, 640, 262, 42))  # 放大
        self.label_6.setStyleSheet("font: 10pt \"Times New Roman\";\n"  # 减小字体
"color:rgb(71, 99, 255);\n"
"border-image: Transparent;")
        self.label_6.setObjectName("label_6")

        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(0, 580, 102, 40))  # 放大
        self.pushButton_3.setStyleSheet("font: 10pt \"Times New Roman\";\n"  # 减小字体
"background: rgb(175, 203, 255);\n"
"border-image: Transparent;")
        self.pushButton_3.setObjectName("pushButton_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.actionAbout_FwMusic = QtWidgets.QAction(MainWindow)
        self.actionAbout_FwMusic.setObjectName("actionAbout_FwMusic")
        self.actionAbout_me = QtWidgets.QAction(MainWindow)
        self.actionAbout_me.setObjectName("actionAbout_me")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "FwMusic v2.0-beta9"))
        self.label.setText(_translate("MainWindow", "FwMusic"))
        self.label_2.setText(_translate("MainWindow", "v2.0-b9(20109)"))
        self.commandLinkButton.setText(_translate("MainWindow", "Download"))
        self.pushButton.setText(_translate("MainWindow", "Settings"))
        self.pushButton_2.setText(_translate("MainWindow", "About"))
        self.label_3.setText(_translate("MainWindow", "Theme: CityOfRain2"))
        self.label_4.setText(_translate("MainWindow", "Picture: CsLrisEto(Unauthorized)"))
        self.label_5.setText(_translate("MainWindow", "Program: Flying374"))
        self.label_6.setText(_translate("MainWindow", "BGM:孤岛城市的传说"))
        self.pushButton_3.setText(_translate("MainWindow", "Exit"))
        self.actionAbout_FwMusic.setText(_translate("MainWindow", "About FwMusic"))
        self.actionAbout_me.setText(_translate("MainWindow", "About me"))

    def get_url(self):
        self.url = self.lineEdit.text()
        # print(self.url)

    def download(self):
        try:
            self.get_url()
            # print('Downloading')
            url = Fwapi.Url(self.url)
            if url.get_type() == 'unknown' or url.get_id == '':
                print('Error:Invalid URL')
                raise Exception('Error:Invalid URL')

            if url.get_type() == 'playlist':
                playlist = Fwapi.Playlist_v2(url.get_id())
                playlist.get_details()
                downloader = Fwapi.Downloader()

                d_n = downloader.download(playlist.playlist_songs, playlist.playlist_name)
                downloader_v2 = Fwapi.Downloader_v2()
                downloader_v2.vip_download(d_n, playlist.playlist_name)


            elif url.get_type() == 'album':
                album = Fwapi.Album(url.get_id())
                album.get_details()
                downloader = Fwapi.Downloader()

                d_n = downloader.download(album.album_song_list, album.album_name)
                downloader_v2 = Fwapi.Downloader_v2()
                downloader_v2.vip_download(d_n, album.album_name)


            elif url.get_type() == 'artist':
                artist = Fwapi.Artist(url.get_id())
                artist.get_details()
                downloader = Fwapi.Downloader()
                d_n = downloader.download(artist.artist_songs, artist.artist_name)
                downloader_v2 = Fwapi.Downloader_v2()
                downloader_v2.vip_download(d_n, artist.artist_name)


            elif url.get_type() == 'song':
                Messagebox.show_warning(title='Warning', message='Downloading a single song is not supported yet. :(')


        except Exception:
            pass

    def settings(self):
        Messagebox.show_info(title='Settings', message='Sorry, Settings is not available yet. :(')

    def about(self):
        Messagebox.okcancel(title='About FwMusic2', message='FwMusic2 is a simple music downloader.'
                                                            '\nBased on FwMusic.'
                                                           '\nThis product is for learning purposes only.\nI am not '
                                                           'responsible for any consequences resulting from the use of '
                                                           'this product.\nVersion:'
                                                           'v2.0-b9(20109).\nAuthor: Flying374.\nFor more '
                                                           'information, please visit: '
                                                           'https://github.com/Flying374/FwMusic2.')

    def exit(self):
        exit()